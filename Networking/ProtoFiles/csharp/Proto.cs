// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from Proto.proto</summary>
  public static partial class ProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtQcm90by5wcm90bxIIUHJvdG9jb2wiMAoKRFRPQW5nYWphdBIQCgh1c2Vy",
            "bmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSJNCgpJbmZvU3VibWl0EhIK",
            "CmNhcGFjaXRhdGUYASABKAUSFwoPbnVtZVBhcnRpY2lwYW50GAIgASgJEhIK",
            "Cm51bWVFY2hpcGEYAyABKAkiQwoIRFRPQ3Vyc2ESDwoHaWRDdXJzYRgBIAEo",
            "BRISCgpjYXBhY2l0YXRlGAIgASgFEhIKCm5ySW5zY3Jpc2kYAyABKAUiRgoH",
            "RFRPUGFydBIVCg1pZFBhcnRpY2lwYW50GAEgASgFEhAKCE51bWVQYXJ0GAIg",
            "ASgJEhIKCmNhcGFjaXRhdGUYAyABKAUilwIKB1JlcXVlc3QSJAoEdHlwZRgB",
            "IAEoDjIWLlByb3RvY29sLlJlcXVlc3QuVHlwZRInCgdhbmdhamF0GAIgASgL",
            "MhQuUHJvdG9jb2wuRFRPQW5nYWphdEgAEioKCmluZm9TdWJtaXQYAyABKAsy",
            "FC5Qcm90b2NvbC5JbmZvU3VibWl0SAASDgoEdGVhbRgEIAEoCUgAInkKBFR5",
            "cGUSCwoHVU5LTk9XThAAEgkKBUxPR0lOEAESCgoGTE9HT1VUEAISDwoLU1VC",
            "TUlUX0lOU0MQAxISCg5TRUFSQ0hfQllfVEVBTRAEEhUKEUdFVF9DVVJSRU5U",
            "X0NVUlNFEAUSEQoNR0VUX0FMTF9URUFNUxAGQgYKBGRhdGEijAIKCFJlc3Bv",
            "bnNlEiUKBHR5cGUYASABKA4yFy5Qcm90b2NvbC5SZXNwb25zZS5UeXBlEg0K",
            "BWVycm9yGAIgASgJEiEKBWN1cnNlGAMgAygLMhIuUHJvdG9jb2wuRFRPQ3Vy",
            "c2ESHwoEcGFydBgEIAMoCzIRLlByb3RvY29sLkRUT1BhcnQSDgoGZWNoaXBl",
            "GAUgAygJInYKBFR5cGUSCwoHVU5LTk9XThAAEgYKAk9LEAESCQoFRVJST1IQ",
            "AhIOCgpORVdfU1VCTUlUEAMSEgoOR0VUX0RJU1BfQ1VSU0UQBBIVChFHRVRf",
            "U0VBUkNIX1JFU1VMVBAFEhMKD0FMTF9URUFNX1JFU1VMVBAGYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DTOAngajat), global::Protocol.DTOAngajat.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.InfoSubmit), global::Protocol.InfoSubmit.Parser, new[]{ "Capacitate", "NumeParticipant", "NumeEchipa" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DTOCursa), global::Protocol.DTOCursa.Parser, new[]{ "IdCursa", "Capacitate", "NrInscrisi" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.DTOPart), global::Protocol.DTOPart.Parser, new[]{ "IdParticipant", "NumePart", "Capacitate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Request), global::Protocol.Request.Parser, new[]{ "Type", "Angajat", "InfoSubmit", "Team" }, new[]{ "Data" }, new[]{ typeof(global::Protocol.Request.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Response), global::Protocol.Response.Parser, new[]{ "Type", "Error", "Curse", "Part", "Echipe" }, null, new[]{ typeof(global::Protocol.Response.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DTOAngajat : pb::IMessage<DTOAngajat> {
    private static readonly pb::MessageParser<DTOAngajat> _parser = new pb::MessageParser<DTOAngajat>(() => new DTOAngajat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOAngajat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAngajat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAngajat(DTOAngajat other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAngajat Clone() {
      return new DTOAngajat(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOAngajat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOAngajat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOAngajat other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InfoSubmit : pb::IMessage<InfoSubmit> {
    private static readonly pb::MessageParser<InfoSubmit> _parser = new pb::MessageParser<InfoSubmit>(() => new InfoSubmit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoSubmit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoSubmit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoSubmit(InfoSubmit other) : this() {
      capacitate_ = other.capacitate_;
      numeParticipant_ = other.numeParticipant_;
      numeEchipa_ = other.numeEchipa_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoSubmit Clone() {
      return new InfoSubmit(this);
    }

    /// <summary>Field number for the "capacitate" field.</summary>
    public const int CapacitateFieldNumber = 1;
    private int capacitate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacitate {
      get { return capacitate_; }
      set {
        capacitate_ = value;
      }
    }

    /// <summary>Field number for the "numeParticipant" field.</summary>
    public const int NumeParticipantFieldNumber = 2;
    private string numeParticipant_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NumeParticipant {
      get { return numeParticipant_; }
      set {
        numeParticipant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numeEchipa" field.</summary>
    public const int NumeEchipaFieldNumber = 3;
    private string numeEchipa_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NumeEchipa {
      get { return numeEchipa_; }
      set {
        numeEchipa_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoSubmit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoSubmit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Capacitate != other.Capacitate) return false;
      if (NumeParticipant != other.NumeParticipant) return false;
      if (NumeEchipa != other.NumeEchipa) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Capacitate != 0) hash ^= Capacitate.GetHashCode();
      if (NumeParticipant.Length != 0) hash ^= NumeParticipant.GetHashCode();
      if (NumeEchipa.Length != 0) hash ^= NumeEchipa.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Capacitate != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Capacitate);
      }
      if (NumeParticipant.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NumeParticipant);
      }
      if (NumeEchipa.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NumeEchipa);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Capacitate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacitate);
      }
      if (NumeParticipant.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NumeParticipant);
      }
      if (NumeEchipa.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NumeEchipa);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoSubmit other) {
      if (other == null) {
        return;
      }
      if (other.Capacitate != 0) {
        Capacitate = other.Capacitate;
      }
      if (other.NumeParticipant.Length != 0) {
        NumeParticipant = other.NumeParticipant;
      }
      if (other.NumeEchipa.Length != 0) {
        NumeEchipa = other.NumeEchipa;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Capacitate = input.ReadInt32();
            break;
          }
          case 18: {
            NumeParticipant = input.ReadString();
            break;
          }
          case 26: {
            NumeEchipa = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DTOCursa : pb::IMessage<DTOCursa> {
    private static readonly pb::MessageParser<DTOCursa> _parser = new pb::MessageParser<DTOCursa>(() => new DTOCursa());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOCursa> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOCursa() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOCursa(DTOCursa other) : this() {
      idCursa_ = other.idCursa_;
      capacitate_ = other.capacitate_;
      nrInscrisi_ = other.nrInscrisi_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOCursa Clone() {
      return new DTOCursa(this);
    }

    /// <summary>Field number for the "idCursa" field.</summary>
    public const int IdCursaFieldNumber = 1;
    private int idCursa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdCursa {
      get { return idCursa_; }
      set {
        idCursa_ = value;
      }
    }

    /// <summary>Field number for the "capacitate" field.</summary>
    public const int CapacitateFieldNumber = 2;
    private int capacitate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacitate {
      get { return capacitate_; }
      set {
        capacitate_ = value;
      }
    }

    /// <summary>Field number for the "nrInscrisi" field.</summary>
    public const int NrInscrisiFieldNumber = 3;
    private int nrInscrisi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NrInscrisi {
      get { return nrInscrisi_; }
      set {
        nrInscrisi_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOCursa);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOCursa other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdCursa != other.IdCursa) return false;
      if (Capacitate != other.Capacitate) return false;
      if (NrInscrisi != other.NrInscrisi) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdCursa != 0) hash ^= IdCursa.GetHashCode();
      if (Capacitate != 0) hash ^= Capacitate.GetHashCode();
      if (NrInscrisi != 0) hash ^= NrInscrisi.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdCursa != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdCursa);
      }
      if (Capacitate != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Capacitate);
      }
      if (NrInscrisi != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NrInscrisi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdCursa != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdCursa);
      }
      if (Capacitate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacitate);
      }
      if (NrInscrisi != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NrInscrisi);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOCursa other) {
      if (other == null) {
        return;
      }
      if (other.IdCursa != 0) {
        IdCursa = other.IdCursa;
      }
      if (other.Capacitate != 0) {
        Capacitate = other.Capacitate;
      }
      if (other.NrInscrisi != 0) {
        NrInscrisi = other.NrInscrisi;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdCursa = input.ReadInt32();
            break;
          }
          case 16: {
            Capacitate = input.ReadInt32();
            break;
          }
          case 24: {
            NrInscrisi = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DTOPart : pb::IMessage<DTOPart> {
    private static readonly pb::MessageParser<DTOPart> _parser = new pb::MessageParser<DTOPart>(() => new DTOPart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOPart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOPart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOPart(DTOPart other) : this() {
      idParticipant_ = other.idParticipant_;
      numePart_ = other.numePart_;
      capacitate_ = other.capacitate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOPart Clone() {
      return new DTOPart(this);
    }

    /// <summary>Field number for the "idParticipant" field.</summary>
    public const int IdParticipantFieldNumber = 1;
    private int idParticipant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdParticipant {
      get { return idParticipant_; }
      set {
        idParticipant_ = value;
      }
    }

    /// <summary>Field number for the "NumePart" field.</summary>
    public const int NumePartFieldNumber = 2;
    private string numePart_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NumePart {
      get { return numePart_; }
      set {
        numePart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "capacitate" field.</summary>
    public const int CapacitateFieldNumber = 3;
    private int capacitate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacitate {
      get { return capacitate_; }
      set {
        capacitate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOPart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOPart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdParticipant != other.IdParticipant) return false;
      if (NumePart != other.NumePart) return false;
      if (Capacitate != other.Capacitate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdParticipant != 0) hash ^= IdParticipant.GetHashCode();
      if (NumePart.Length != 0) hash ^= NumePart.GetHashCode();
      if (Capacitate != 0) hash ^= Capacitate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdParticipant != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdParticipant);
      }
      if (NumePart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NumePart);
      }
      if (Capacitate != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Capacitate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdParticipant != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdParticipant);
      }
      if (NumePart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NumePart);
      }
      if (Capacitate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacitate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOPart other) {
      if (other == null) {
        return;
      }
      if (other.IdParticipant != 0) {
        IdParticipant = other.IdParticipant;
      }
      if (other.NumePart.Length != 0) {
        NumePart = other.NumePart;
      }
      if (other.Capacitate != 0) {
        Capacitate = other.Capacitate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdParticipant = input.ReadInt32();
            break;
          }
          case 18: {
            NumePart = input.ReadString();
            break;
          }
          case 24: {
            Capacitate = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      switch (other.DataCase) {
        case DataOneofCase.Angajat:
          Angajat = other.Angajat.Clone();
          break;
        case DataOneofCase.InfoSubmit:
          InfoSubmit = other.InfoSubmit.Clone();
          break;
        case DataOneofCase.Team:
          Team = other.Team;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Protocol.Request.Types.Type type_ = global::Protocol.Request.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Request.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "angajat" field.</summary>
    public const int AngajatFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.DTOAngajat Angajat {
      get { return dataCase_ == DataOneofCase.Angajat ? (global::Protocol.DTOAngajat) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Angajat;
      }
    }

    /// <summary>Field number for the "infoSubmit" field.</summary>
    public const int InfoSubmitFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.InfoSubmit InfoSubmit {
      get { return dataCase_ == DataOneofCase.InfoSubmit ? (global::Protocol.InfoSubmit) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.InfoSubmit;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Team {
      get { return dataCase_ == DataOneofCase.Team ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Team;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Angajat = 2,
      InfoSubmit = 3,
      Team = 4,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Angajat, other.Angajat)) return false;
      if (!object.Equals(InfoSubmit, other.InfoSubmit)) return false;
      if (Team != other.Team) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Protocol.Request.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (dataCase_ == DataOneofCase.Angajat) hash ^= Angajat.GetHashCode();
      if (dataCase_ == DataOneofCase.InfoSubmit) hash ^= InfoSubmit.GetHashCode();
      if (dataCase_ == DataOneofCase.Team) hash ^= Team.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Protocol.Request.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.Angajat) {
        output.WriteRawTag(18);
        output.WriteMessage(Angajat);
      }
      if (dataCase_ == DataOneofCase.InfoSubmit) {
        output.WriteRawTag(26);
        output.WriteMessage(InfoSubmit);
      }
      if (dataCase_ == DataOneofCase.Team) {
        output.WriteRawTag(34);
        output.WriteString(Team);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Protocol.Request.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (dataCase_ == DataOneofCase.Angajat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angajat);
      }
      if (dataCase_ == DataOneofCase.InfoSubmit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoSubmit);
      }
      if (dataCase_ == DataOneofCase.Team) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Team);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Protocol.Request.Types.Type.Unknown) {
        Type = other.Type;
      }
      switch (other.DataCase) {
        case DataOneofCase.Angajat:
          if (Angajat == null) {
            Angajat = new global::Protocol.DTOAngajat();
          }
          Angajat.MergeFrom(other.Angajat);
          break;
        case DataOneofCase.InfoSubmit:
          if (InfoSubmit == null) {
            InfoSubmit = new global::Protocol.InfoSubmit();
          }
          InfoSubmit.MergeFrom(other.InfoSubmit);
          break;
        case DataOneofCase.Team:
          Team = other.Team;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Protocol.Request.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Protocol.DTOAngajat subBuilder = new global::Protocol.DTOAngajat();
            if (dataCase_ == DataOneofCase.Angajat) {
              subBuilder.MergeFrom(Angajat);
            }
            input.ReadMessage(subBuilder);
            Angajat = subBuilder;
            break;
          }
          case 26: {
            global::Protocol.InfoSubmit subBuilder = new global::Protocol.InfoSubmit();
            if (dataCase_ == DataOneofCase.InfoSubmit) {
              subBuilder.MergeFrom(InfoSubmit);
            }
            input.ReadMessage(subBuilder);
            InfoSubmit = subBuilder;
            break;
          }
          case 34: {
            Team = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("LOGIN")] Login = 1,
        [pbr::OriginalName("LOGOUT")] Logout = 2,
        [pbr::OriginalName("SUBMIT_INSC")] SubmitInsc = 3,
        [pbr::OriginalName("SEARCH_BY_TEAM")] SearchByTeam = 4,
        [pbr::OriginalName("GET_CURRENT_CURSE")] GetCurrentCurse = 5,
        [pbr::OriginalName("GET_ALL_TEAMS")] GetAllTeams = 6,
      }

    }
    #endregion

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtoReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      curse_ = other.curse_.Clone();
      part_ = other.part_.Clone();
      echipe_ = other.echipe_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Protocol.Response.Types.Type type_ = global::Protocol.Response.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Response.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "curse" field.</summary>
    public const int CurseFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protocol.DTOCursa> _repeated_curse_codec
        = pb::FieldCodec.ForMessage(26, global::Protocol.DTOCursa.Parser);
    private readonly pbc::RepeatedField<global::Protocol.DTOCursa> curse_ = new pbc::RepeatedField<global::Protocol.DTOCursa>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.DTOCursa> Curse {
      get { return curse_; }
    }

    /// <summary>Field number for the "part" field.</summary>
    public const int PartFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Protocol.DTOPart> _repeated_part_codec
        = pb::FieldCodec.ForMessage(34, global::Protocol.DTOPart.Parser);
    private readonly pbc::RepeatedField<global::Protocol.DTOPart> part_ = new pbc::RepeatedField<global::Protocol.DTOPart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.DTOPart> Part {
      get { return part_; }
    }

    /// <summary>Field number for the "echipe" field.</summary>
    public const int EchipeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_echipe_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> echipe_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Echipe {
      get { return echipe_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if(!curse_.Equals(other.curse_)) return false;
      if(!part_.Equals(other.part_)) return false;
      if(!echipe_.Equals(other.echipe_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Protocol.Response.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= curse_.GetHashCode();
      hash ^= part_.GetHashCode();
      hash ^= echipe_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Protocol.Response.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      curse_.WriteTo(output, _repeated_curse_codec);
      part_.WriteTo(output, _repeated_part_codec);
      echipe_.WriteTo(output, _repeated_echipe_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Protocol.Response.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += curse_.CalculateSize(_repeated_curse_codec);
      size += part_.CalculateSize(_repeated_part_codec);
      size += echipe_.CalculateSize(_repeated_echipe_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Protocol.Response.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      curse_.Add(other.curse_);
      part_.Add(other.part_);
      echipe_.Add(other.echipe_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Protocol.Response.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            curse_.AddEntriesFrom(input, _repeated_curse_codec);
            break;
          }
          case 34: {
            part_.AddEntriesFrom(input, _repeated_part_codec);
            break;
          }
          case 42: {
            echipe_.AddEntriesFrom(input, _repeated_echipe_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("ERROR")] Error = 2,
        [pbr::OriginalName("NEW_SUBMIT")] NewSubmit = 3,
        [pbr::OriginalName("GET_DISP_CURSE")] GetDispCurse = 4,
        [pbr::OriginalName("GET_SEARCH_RESULT")] GetSearchResult = 5,
        [pbr::OriginalName("ALL_TEAM_RESULT")] AllTeamResult = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
